Challenge - LeetCode [07.07.2020]

https://leetcode.com/explore/challenge/card/july-leetcoding-challenge/544/week-1-july-1st-july-7th/3382/

Given a non-empty array of digits representing a non-negative integer, plus one to the integer.

The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.

You may assume the integer does not contain any leading zero, except the number 0 itself.

Example 1:

Input: [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Example 2:

Input: [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.


// Java

public class Plus_One {

	public static int[] plus_one(int[] array)
	{
		for (int i = array.length-1; i >= 0; --i)
		{
			if (array[i] != 9) {
				array[i]++;
				return array;
			}
			else {
				array[i] = 0;
			}
		}
		
		// corner case
		
		int[] new_array = new int[array.length + 1];
		new_array[0] = 1;
		
		return new_array;
	}
	
	public static void display(int[] data)
	{
		for (int element: data)
		{
			System.out.print(element + " ");
		}
	}
	
	public static void main(String[] args) {

		int[][] data = {{1,2,3},{1,9,2},{9,1,2},{1,9},{9,9,9},{9,9},{9}};
		
		for (int[] nested: data)
		{
			display(nested);

			int[] result = plus_one(nested);
			
			System.out.print(" => ");
			
			display(result);
			
			System.out.println();
		}
	}
}

Python-3

# Amateur Logic

def plusOne1(digits):
    carry = 0
    
    digits[-1] += 1
    
    i = -1

    while i >= -len(digits):
        digits[i] += carry

        if digits[i] > 9:
            unit_digit = digits[i] % 10
            tens_digit = digits[i] // 10
            
            digits[i] = unit_digit
            carry = tens_digit
        else:
            carry = 0
        
        i -= 1
        
    if carry > 0:
        digits = [carry] + digits[:]
                
    return digits

# Pro

def plusOne2(digits):
    for i in range(len(digits)-1,-1,-1):
        if digits[i] != 9:
            digits[i] += 1
            return digits
        
        digits[i] = 0
    else:
        return [1] + digits

data = [[1,2,3],[1,9,2],[9,1,2],[1,9],[9,9,9],[9,9],[9]]

for nested in data:
    print(nested, end = " => ")

    new_list = plus_one(nested)

    print(new_list)
    
'''

OUTPUTS:

1 2 3  => 1 2 4 
1 9 2  => 1 9 3 
9 1 2  => 9 1 3 
1 9  => 2 0 
9 9 9  => 1 0 0 0 
9 9  => 1 0 0 
9  => 1 0 

'''
